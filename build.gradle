

plugins {
    id "com.jdroid.java" version "0.9.5"
    id "com.google.protobuf" version "0.8.2"
    id "info.solidsoft.pitest" version "1.1.11"
    id "com.github.kt3k.coveralls" version "2.8.1"
}

pitest {
    enableDefaultIncrementalAnalysis = true
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    targetClasses = ["io.github.jraft.*"]  //by default "${project.group}.*"
    targetTests = ['io.github.jraft.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
}

dependencies {
    compile 'io.grpc:grpc-netty:1.2.0'
    compile 'io.grpc:grpc-protobuf:1.2.0'
    compile 'io.grpc:grpc-stub:1.2.0'
    compile 'org.fusesource.leveldbjni:leveldbjni-all:1.8'
    compile 'org.apache.commons:commons-lang3:3.5'

    compile 'org.apache.logging.log4j:log4j-api:2.8.2'
    compile 'org.apache.logging.log4j:log4j-core:2.8.2'
    compile 'commons-io:commons-io:2.4'
    compile 'org.mockito:mockito-all:1.10.19'

    testCompile "org.fusesource.leveldbjni:leveldbjni-all:1.8"
    testCompile "junit:junit:4.11"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

protobuf {
    protoc {
        // The version of protoc must match protobuf-java. If you don't depend on
        // protobuf-java directly, you will be transitively depending on the
        // protobuf-java version that grpc depends on.
        artifact = "com.google.protobuf:protoc:3.2.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.2.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                outputSubDir = ''
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src"
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        proto {
            srcDir 'src/main/java/proto'
        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}