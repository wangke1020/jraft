
apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

dependencies {
    compile 'io.grpc:grpc-netty:1.2.0'
    compile 'io.grpc:grpc-protobuf:1.2.0'
    compile 'io.grpc:grpc-stub:1.2.0'
    compile 'org.fusesource.leveldbjni:leveldbjni-linux64:1.8'
    compile 'org.apache.commons:commons-lang3:3.5'

    compile 'org.apache.logging.log4j:log4j-api:2.8.2'
    compile 'org.apache.logging.log4j:log4j-core:2.8.2'

    testCompile "org.fusesource.leveldbjni:leveldbjni-linux64:1.8"
    testCompile "junit:junit:4.11"
}


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

protobuf {
    protoc {
        // The version of protoc must match protobuf-java. If you don't depend on
        // protobuf-java directly, you will be transitively depending on the
        // protobuf-java version that grpc depends on.
        artifact = "com.google.protobuf:protoc:3.2.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.2.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                outputSubDir = ''
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src"
}

idea {
    module {
        sourceDirs += file('src/main/java')

        testSourceDirs += file('test/main/java')
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        proto {
            srcDir 'src/main/java/proto'
        }
    }
}

task runMain(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'io.github.jraft.Node'
}
